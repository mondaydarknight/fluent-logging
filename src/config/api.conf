<label @API>
  <filter api.product>
    @type grep
    <regexp>
      key status
      pattern /^200$/
    </regexp>
  </filter>
  <filter api.product>
    @type jwt
    method decrypt
    key_name http_x_oauth_token
    hash_value_field oauth_token
  </filter>
  <filter api.product>
    @type record_transformer
    enable_ruby true
    renew_record true
    <record>
      event Product
      device_id ${record["http_device_id"]}
      path ${record["request_uri"][/\/items\/\d+(\?.*)?/, 1]}
      user ${{"client_ip": record["remote_addr"], "user_id": record.dig("oauth_token", 0, "sub")}.reject{|k,v| v.nil?}}
    </record>
  </filter>
  <match api.**>
    @type mongo
    @id out-file-mongo
    connection_string "#{ENV['MONGO_DNS']}"
    collection TrackingEvent
    <buffer time>
      @type file
      chunk_limit_size "#{ENV['FLUENT_BUFFER_CHUNK_LIMIT_SIZE'] || '256m'}"
      flush_mode flush
      flush_interval "#{ENV['FLUENT_BUFFER_FLUSH_INTERVAL'] || '60s'}"
      flush_thread_count "#{ENV['FLUENT_BUFFER_FLUSH_THREAD_COUNT'] || 1}"
      queued_chunks_limit_size "#{ENV['FLUENT_BUFFER_QUEUED_CHUNK_LIMIT_LENGTH'] || 32}"
      timekey "#{ENV['FLUENT_BUFFER_CHUNK_TIME_KEY'] || '10s'}"
      timekey_wait "#{ENV['FLUENT_BUFFER_CHUNK_TIME_KEY_DELAY'] || '10s'}"
      timekey_use_utc true
      total_limit_size "#{ENV['FLUENT_BUFFER_TOTAL_LIMIT_SIZE'] || '64g'}"
      retry_forever true
      retry_wait "#{ENV['FLUENT_BUFFER_RETRY_WAIT'] || 1}"
    </buffer>
    <inject>
      time_key receive_at
      time_type string
      time_format %Y-%m-%dT%H:%M:%S.%3N%z
      utc true
    </inject>
  </match>
</label>
